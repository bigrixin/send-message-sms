<?xml version="1.0" encoding="utf-8"?>
<appSettings>
	<add key="recreateDb" value="true" />

	<!-- webpages:Version - Use version 3 of the Razor engine (See http://blogs.msdn.com/b/webdev/archive/2013/07/10/how-does-vs-determine-which-version-of-razor-engine-to-use-when-editing-razor-webpage-files.aspx). -->
	<add key="webpages:Version" value="3.0.0.0"/>
	<!-- webpages:Enabled - Prevents .cshtml or .vbhtml files in the Views folder from being directly accessible from a web browser. Important from a security standpoint that this is always false. (See http://stackoverflow.com/questions/4886095/what-is-the-function-of-webpagesenabled-in-mvc-3-web-config). -->
	<add key="webpages:Enabled" value="false"/>
	<!-- ClientValidationEnabled - Enable client side JavaScript validation. -->
	<add key="ClientValidationEnabled" value="true"/>
	<!-- UnobtrusiveJavaScriptEnabled - Enable client side JavaScript validation using jQuery Validate. -->
	<add key="UnobtrusiveJavaScriptEnabled" value="true"/>

	<!-- Turn on/off ELMAH.MVC handler. -->
	<add key="elmah.mvc.disableHandler" value="true" />
	<!-- By default HandleErrorAttribute() is set as global filter, to disable it, set value to "true". -->
	<add key="elmah.mvc.disableHandleErrorFilter" value="true" />
	<!-- Secure the elmah route with authentication. -->
	<add key="elmah.mvc.requiresAuthentication" value="true" />
	<!-- Ignore the default route and use the elmah.mvc.route setting below. -->
	<add key="elmah.mvc.IgnoreDefaultRoute" value="true" />
	<!-- In case of authentication is turned on, you can specify exact roles of user that have access (e.g. "Administrator"). -->
	<add key="elmah.mvc.allowedRoles" value="admin" />
	<!-- In case of authentication is turned on, you can specify exact users that have access (eg. "johndoe"). -->
	<add key="elmah.mvc.allowedUsers" value="*" />
	<!-- Configure ELMAH.MVC access route. Note that you should probably change this to something else.
					 This is to add a little security through obscurity. hackers can't hack your elmah page if they
					 don't know where it is.
					 Note: If you change this value (Which you should) don't forget to also change the route in RouteConfig.cs. -->
	<add key="elmah.mvc.route" value="elmah" />
	<add key="elmah.mvc.UserAuthCaseSensitive" value="true" />

	<add key="owin:AppStartup" value="MyAbilityFirst.Startup" />

	<add key="mandrill.ApiKey" value="NP8XKj_sFNk4DhjiTTfuhg" />
	<add key="mandrill.From" value="myabilityfirst@oversixty.com.au"/>
	<add key="mandrill.FromName" value="My Ability First"/>

	<add key="emailFrom" value="myabilityfirst@gmail.com" />
	<add key="emailPassword" value="angrychicken" />
	<add key="servidorSMTP" value="smtp.gmail.com" />
	<add key="SMTPPort" value="587" />

	<add key="uploadAzurePath_Job" value="job"/>
	<add key="uploadAzurePath_Client" value="client"/>
	<add key="azure.uploadPath.Patient" value="patient"/>
	<add key="uploadAzurePath_Careworker" value="careworker"/>
	<add key="StorageConnectionString" value="DefaultEndpointsProtocol=https;AccountName=mafstorage;AccountKey=FNXXd1mXyAalkvUUFGKmbSqCBTH7zb6IFDeCN0Sxik9Tihk1qOxKzE0O/6l9Rc50wjeHsNS7bu8DDJJfbqeobw==;EndpointSuffix=core.windows.net" />

	<add key="email_api_user" value="username"/>
	<add key="email_api_password" value="password"/>
	<add key="email_api_url" value="https://sendgrid.com/api/mail.send.json"/>

	<add key="twilio_SmsAccount_ID" value="AC7aa4839361cd01de27e10cb96567f62a"/>
	<add key="Twilio_SmsAccount_Token" value="dda95bae4c47ea2ef47fc455a809b957"/>
	<add key="Twilio_SmsFrom_PhoneNumber" value="+61428605803"/>
	
	</appSettings>