@model MyAbilityFirst.Models.PatientDetailsViewModel

<div>
	@Html.HiddenFor(model => model.Contacts[Model.Contacts.Count() - 1].ID)
	@Html.HiddenFor(model => model.Contacts[Model.Contacts.Count() - 1].PatientID)
	<div class="form-group">
		@Html.LabelFor(model => model.Contacts[Model.Contacts.Count() - 1].ContactName, htmlAttributes: new { @class = "control-label col-md-3" })
		<div class="col-md-9">
			@Html.EditorFor(model => model.Contacts[Model.Contacts.Count() - 1].ContactName, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Contacts[Model.Contacts.Count() - 1].ContactName, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.Contacts[Model.Contacts.Count() - 1].ContactName)
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Contacts[Model.Contacts.Count() - 1].MobilePhone, htmlAttributes: new { @class = "control-label col-md-3" })
		<div class="col-md-9">
			@Html.EditorFor(model => model.Contacts[Model.Contacts.Count() - 1].MobilePhone, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Contacts[Model.Contacts.Count() - 1].MobilePhone, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.Contacts[Model.Contacts.Count() - 1].MobilePhone)
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Contacts[Model.Contacts.Count() - 1].WorkPhone, htmlAttributes: new { @class = "control-label col-md-3" })
		<div class="col-md-9">
			@Html.EditorFor(model => model.Contacts[Model.Contacts.Count() - 1].WorkPhone, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Contacts[Model.Contacts.Count() - 1].WorkPhone, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.Contacts[Model.Contacts.Count() - 1].WorkPhone)
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Contacts[Model.Contacts.Count() - 1].HomePhone, htmlAttributes: new { @class = "control-label col-md-3" })
		<div class="col-md-9">
			@Html.EditorFor(model => model.Contacts[Model.Contacts.Count() - 1].HomePhone, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Contacts[Model.Contacts.Count() - 1].HomePhone, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.Contacts[Model.Contacts.Count() - 1].HomePhone)
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Contacts[Model.Contacts.Count() - 1].Email, htmlAttributes: new { @class = "control-label col-md-3" })
		<div class="col-md-9">
			@Html.EditorFor(model => model.Contacts[Model.Contacts.Count() - 1].Email, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Contacts[Model.Contacts.Count() - 1].Email, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.Contacts[Model.Contacts.Count() - 1].Email)
		</div>
	</div>
	<div class="form-group">
		@Html.Label("Relationship", htmlAttributes: new { @class = "control-label col-md-3" })
		<div class="col-md-9">
			@Html.DropDownListFor(m => m.Contacts[Model.Contacts.Count() - 1].RelationshipID,
									new SelectList(Model.RelationshipDropDownList.Items, "ID", "Name", Model.Contacts[Model.Contacts.Count() - 1].RelationshipID),
new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.Contacts[Model.Contacts.Count() - 1].RelationshipID, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.Contacts[Model.Contacts.Count() - 1].RelationshipID)
		</div>
	</div>
</div>

<div id="div-new-contact">
	<div class="form-group" id="div-new-contact">
		<div class="col-md-12">
			<button id="btn-add-contact" type="button" class="btn btn-default"
							onclick="AJAXPostReplace(
					'@(Url.Action("NewContact", "Patient", null))',
					{Contacts: @Json.Encode(Model.Contacts)},
					'#btn-add-contact',
					'#div-new-contact',
					[]
					)">
				<i class="glyphicon glyphicon-plus"></i> Add New Contact
			</button>
		</div>
	</div>
</div>
