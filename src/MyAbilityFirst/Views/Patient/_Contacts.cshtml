@model MyAbilityFirst.Models.PatientDetailsViewModel

@for (int contactIndex = 0; contactIndex < Model.Contacts.Count(); contactIndex++)
{
		<div>
			<h4>
				@Html.Label("Contact: " + Model.Contacts[contactIndex].ContactName ?? "New Contact", htmlAttributes: new { @class = "control-label" })
			</h4>

			@Html.HiddenFor(model => model.Contacts[contactIndex].ID)
			@Html.HiddenFor(model => model.Contacts[contactIndex].PatientID)
			<div class="form-group">
				@Html.LabelFor(model => model.Contacts[contactIndex].ContactName, htmlAttributes: new { @class = "control-label col-md-3" })
				<div class="col-md-9">
					@Html.EditorFor(model => model.Contacts[contactIndex].ContactName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Contacts[contactIndex].ContactName, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.Contacts[contactIndex].ContactName)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.Contacts[contactIndex].MobilePhone, htmlAttributes: new { @class = "control-label col-md-3" })
				<div class="col-md-9">
					@Html.EditorFor(model => model.Contacts[contactIndex].MobilePhone, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Contacts[contactIndex].MobilePhone, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.Contacts[contactIndex].MobilePhone)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.Contacts[contactIndex].WorkPhone, htmlAttributes: new { @class = "control-label col-md-3" })
				<div class="col-md-9">
					@Html.EditorFor(model => model.Contacts[contactIndex].WorkPhone, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Contacts[contactIndex].WorkPhone, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.Contacts[contactIndex].WorkPhone)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.Contacts[contactIndex].HomePhone, htmlAttributes: new { @class = "control-label col-md-3" })
				<div class="col-md-9">
					@Html.EditorFor(model => model.Contacts[contactIndex].HomePhone, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Contacts[contactIndex].HomePhone, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.Contacts[contactIndex].HomePhone)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.Contacts[contactIndex].Email, htmlAttributes: new { @class = "control-label col-md-3" })
				<div class="col-md-9">
					@Html.EditorFor(model => model.Contacts[contactIndex].Email, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Contacts[contactIndex].Email, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.Contacts[contactIndex].Email)
				</div>
			</div>
			<div class="form-group">
				@Html.Label("Relationship", htmlAttributes: new { @class = "control-label col-md-3" })
				<div class="col-md-9">
					@Html.DropDownListFor(m => m.Contacts[contactIndex].RelationshipID,
											new SelectList(Model.RelationshipDropDownList.Items, "ID", "Name",
											Model.Contacts[contactIndex].RelationshipID), new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.Contacts[contactIndex].RelationshipID, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.Contacts[contactIndex].RelationshipID)
				</div>
			</div>
		</div>

		<hr />
}

<div id="div-new-contact">
	<div class="form-group" id="div-new-contact">
		<div class="col-md-12">
			<button id="btn-add-contact" type="button" class="btn btn-default"
							onclick="AJAXPostReplace(
					'@(Url.Action("NewContact", "Patient", null))',
					{Contacts: @Json.Encode(Model.Contacts)},
					'#btn-add-contact',
					'#div-new-contact',
					[]
					)">
				<i class="glyphicon glyphicon-plus"></i> Add New Contact
			</button>
		</div>
	</div>
</div>