@model PagedList.IPagedList<MyAbilityFirst.Domain.ClientFunctions.UpdateBookingViewModel>
@using PagedList.Mvc;
<link href="~/Content/bootstrap-rating.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-rating/bootstrap-rating.min.js"></script>

@{
	ViewBag.Title = "My Bookings";
}
<div class="navbar-left">
	@Html.Action("_MyAccountSidebar", "MyAccount")
</div>

<div class="main-content-wrapper">
	<div class="row">
		<div class="col-md-12">
			<h2>My Bookings</h2>
			<div class="card card-solid">
				<table class="table">
					<tr>
						<th>Client Name</th>
						<th>Start</th>
						<th>End</th>
						<th>Message</th>
						<th>Status</th>

						<th>Details</th>
						<th>Rating</th>
					</tr>

					@foreach (var item in Model)
					{
					<tr>
						<td>
							@Html.DisplayFor(modelItem => item.ClientFirstName)
						</td>
						<td>
							@Convert.ToDateTime(item.Schedule.Start).ToString("dd/MMM")
						</td>
						<td>
							@Convert.ToDateTime(item.Schedule.End).ToString("dd/MMM")
						</td>
						<td>
							@{
								if (item.Message != null)
								{
									if (item.Message.Length > 50)
									{
									@item.Message.Substring(0, 50).ToString() @:<span>...</span>
							  	}
									else
									{
									@Html.DisplayFor(modelItem => item.Message)
									}
								}
							}
						</td>
						<td>
							@Html.Partial("_BookingStatus", item.Status)
						</td>
						<td>
							@Html.HiddenFor(modelItem => item.BookingID)
							@Html.HiddenFor(modelItem => item.CareWorkerID)

							@Html.ActionLink("Details", "Booking", new { bookingId = item.BookingID }, new { @class = "btn btn-primary btn-xs" })
						</td>
						<td>
							@{if (item.Status.ToString() == "Completed")
								{
									if (item.Rating.SingleOrDefault() != null)
									{
										Double rating = Convert.ToDouble(item.Rating.SingleOrDefault().OverallScore);
										<span style="font-size:small; color:orange">
											@Html.BootstrapRating().Value(rating).ReadOnly <br />
										</span>
									}
								}
							}
						</td>

					</tr>
								}
				</table>
				<br />
				Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
				@Html.PagedListPager(Model, page => Url.Action("Bookings", new { page }))
			</div>
		</div>
	</div>
</div>